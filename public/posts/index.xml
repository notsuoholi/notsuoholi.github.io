<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Oli&#39;s Workshop</title>
    <link>https://notsuoholi.github.io/posts/</link>
    <description>Recent content in Posts on Oli&#39;s Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Oct 2024 15:36:20 -0500</lastBuildDate><atom:link href="https://notsuoholi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Troubleshooting as an SRE</title>
      <link>https://notsuoholi.github.io/posts/sretroubleshooting/</link>
      <pubDate>Sat, 26 Oct 2024 15:36:20 -0500</pubDate>
      
      <guid>https://notsuoholi.github.io/posts/sretroubleshooting/</guid>
      
      <description>&lt;p&gt;Below, I will outline some of best practices an SRE should follow to efficiently diagnose and resolve issues within a system, even one they are not familiar with.&lt;/p&gt;
&lt;h2 id=&#34;general-troubleshooting-method&#34;&gt;General Troubleshooting Method&lt;/h2&gt;
&lt;h3 id=&#34;1-the-problem-report&#34;&gt;1. The Problem Report&lt;/h3&gt;
&lt;p&gt;A problem is reported, whether by alert, customer reported ticket, or complaint/report in internal messaging service (i.e. Slack, MS Teams).&lt;/p&gt;
&lt;p&gt;What does this problem report tell us about the expected behavior of the service? What does it tell us about the &lt;em&gt;&lt;strong&gt;actual&lt;/strong&gt;&lt;/em&gt; behavior of the service at present.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Security and YOU (the SRE)</title>
      <link>https://notsuoholi.github.io/posts/sresecurity/</link>
      <pubDate>Mon, 21 Oct 2024 02:01:54 -0500</pubDate>
      
      <guid>https://notsuoholi.github.io/posts/sresecurity/</guid>
      
      <description>&lt;p&gt;Though it may seem as though security might not need to be at the forefront of an SRE&amp;rsquo;s mind, the reality couldn&amp;rsquo;t be more different.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Downtime Reduction - If build security into our practices, we will deliver a product with very few vulnerabilities which in turn means less vulnerability to exploit, and therefore less downtime.&lt;/li&gt;
&lt;li&gt;Compliance Standards - In order to meet compliance standards like &lt;a href=&#34;https://www.getkisi.com/guides/soc-2-type-ii#soc-2-type-ii-compliance&#34;&gt;SOC 2&lt;/a&gt;, our in built procedures regarding security must be strong.&lt;/li&gt;
&lt;li&gt;No Damage to Brand - If we are breached, our reputation will be damaged, thus degrading consumer trust in our product.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;most-common-threats-relevant-to-sre&#34;&gt;Most Common Threats Relevant to SRE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;DDoS Attacks - Aims to drive an overwhelming amount of simulated traffic to a service of piece of a service in order to cause it to be unavailable for use by normal end users.&lt;/li&gt;
&lt;li&gt;Software exploits - If there is an issue or vulnerability in a specific version of our product or a service we use within our product this could be used by an attacker to gain access to our service or infrastructure.&lt;/li&gt;
&lt;li&gt;Phishing - Social engineering can be used to get employees to give up sensitive information and gain access to our service and infrastructure.&lt;/li&gt;
&lt;li&gt;Ransomware - Gaining access to a piece of our infrastructure or codebase as using this as a means to demand payment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;best-practices-for-mitigating-threats&#34;&gt;Best Practices for Mitigating Threats&lt;/h2&gt;
&lt;h3 id=&#34;access-control&#34;&gt;Access Control&lt;/h3&gt;
&lt;p&gt;Controlling access to resources must be a priority.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>SRE - Core Principles</title>
      <link>https://notsuoholi.github.io/posts/srecore/</link>
      <pubDate>Wed, 16 Oct 2024 22:20:49 -0500</pubDate>
      
      <guid>https://notsuoholi.github.io/posts/srecore/</guid>
      
      <description>&lt;p&gt;I have outlined a few of the core responsibilities and practices of Site Reliability Engineers (SREs). Their focus is primarily on operational resilience and reducing toil through automation.&lt;/p&gt;
&lt;p&gt;My goal was to cover key topics like system reliability, incident management, the importance of metrics like SLIs, SLOs, and SLAs, and how SREs use monitoring and alerting to maintain service performance while collaborating closely with development teams to ensure scalable, predictable, and efficient systems.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>DevOps &amp; Release Management - Core Principles</title>
      <link>https://notsuoholi.github.io/posts/devopscore/</link>
      <pubDate>Thu, 10 Oct 2024 22:20:49 -0500</pubDate>
      
      <guid>https://notsuoholi.github.io/posts/devopscore/</guid>
      
      <description>&lt;p&gt;The below serves to outline some of the key aspects of DevOps and Release Engineering. It is not at all a complete guide but does cover some of the most important components. I will add to is as I continue to dive deeper.&lt;/p&gt;
&lt;h2 id=&#34;devops---a-delicate-balance-of-development-and-operations&#34;&gt;DevOps - A delicate balance of development and operations.&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A focus on continuous delivery and automation in the software development lifecycle.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Champion guidelines, practices, and culture that aims  to break down the silos which traditionally separate development, operations, networking, and security.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
